services:
  db:
    container_name: db
    image: mysql
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/data:/var/lib/mysql

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    ports:
      - 3000:3000
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=3306
      - FRONT_HOST=${FRONT_HOST}
      - SITE_BASE_URL=${SITE_BASE_URL}
    depends_on:
      - db

  front:
     container_name: front
     build:
       context: ./front
       dockerfile: Dockerfile
       args:
         FRONT_APP_API_HOST: ${API_HOST}
     restart: unless-stopped
     working_dir: /app
     env_file: .env
     ports:
       - 5000:80
     depends_on: 
       - api

  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    restart: unless-stopped
    ports:
      - 1883:1883      # MQTT protocol
      - 9001:9001      # MQTT over WebSocket (for browser clients)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log